name: Build Image and Deploy

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # allows triggering via GitHub UI
  workflow_dispatch:

env:
  IMAGE_NAME: task-manager
  DOTNET_VERSION: 5.0.x

jobs:

  build:
  
    name: "Build and Push"
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
          
      - name: Run tests
        run: |
          dotnet restore './src'
          dotnet test './src'

      - name: Build image
        run: docker build ./src --file ./src/TaskManager.Api/Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          
  deploy:
    name: "Deploy API"
    runs-on: ubuntu-latest
    needs: build
    environment: 
      name: "Production"
      url: "https://task-manager-arley.azurewebsites.net/"
    
    steps:
      - name: "Deploy to Azure Web Apps"
        id: deploy-web-app
        uses: azure/webapps-deploy@v2
        with:
          app-name: task-manager-arley
          slot-name: production
          publish-profile: ${{ secrets.PRODUCTION_PUBLISH_PROFILE }}
          images: 'docker.pkg.github.com/arleypadua/task-manager/task-manager'
